name: Continuous Integration
on: 
  push: 
    branches: 
      - main
  pull_request: 
  workflow_dispatch:


jobs:
  lint:
    name: Linting
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        os: ["ubuntu-latest"]
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Prepare environment to compile proj
      run: |
        sudo apt -y install libgeos-dev proj-data cmake sqlite3 curl libcurl4-openssl-dev

    - name: Compile and install proj
      run: |
        wget https://download.osgeo.org/proj/proj-9.0.0.tar.gz 
        tar -xf proj-9.0.0.tar.gz
        cd proj-9.0.0
        mkdir build && cd build
        cmake ..
        sudo cmake --build .
        sudo cmake --build . --target install
        sudo ctest
        sudo cp ./bin/* /bin
        sudo cp ./lib/* /lib
        cd ../../

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Analysing the code with pylint
      run: |
        pylint $(git ls-files '*.py') --fail-under=8 --disable=C0111 --rcfile=.pylintrc
